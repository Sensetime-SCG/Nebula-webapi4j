import java.util.Objects

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.9.3/userguide/building_java_projects.html
 */

plugins {
    kotlin("jvm") version "1.7.20"
    `maven-publish`
    `java-library`
}

group = "com.sensetime.nebula"
version = "1.0.0"

repositories {
    mavenCentral()
}

dependencies {

    testImplementation(kotlin("test"))

    implementation("com.google.code.gson:gson:2.10")
    implementation("com.squareup.retrofit2:retrofit:2.9.0")
    implementation("com.squareup.retrofit2:converter-gson:2.9.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4")
}

tasks.withType<org.jetbrains.kotlin.gradle.tasks.KotlinCompile> {
    kotlinOptions.jvmTarget = "11"
}

tasks.test{
    if( ! File(rootDir,"gradle.properties").exists()){
        println(System.getProperty("message","not found systemProp.message in gradle.properties"))
        copy {
            from(File(rootDir,"gradle.properties.template"))
            into(rootDir)
            rename("gradle.properties.template","gradle.properties")
        }
    }

    if(System.getProperty("serverUrl").length < 18)
        throw StopExecutionException("Please update gradle.properties: "+File(rootDir,"gradle.properties"))

    systemProperties(System.getProperties().toMap() as Map<String,Object>)
}

publishing{
    repositories{
        maven{
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Sensetime-SCG/Nebula-webapi4j")
            credentials{
                username = System.getenv("USERNAME")
                password = System.getenv("TOKEN")
            }
        }
    }
}